#!/usr/bin/env coffee

path = require 'path'
nomnom = require 'nomnom'
clc = require 'cli-color'
MacDnsSwitcher = require '../lib/mac_dns_switcher'
Profile = require '../lib/profile'

nomnom.colors()
  .script('dns')

nomnom.option 'list',
  abbr: 'l'
  flag: true
  help: 'lists all dns profiles in ~/.dns.coffee and exits'
  callback: ->
    console.log Profile.getNames().join(' ')

nomnom.option 'device',
  abbr: 'd'
  default: 'Wi-Fi'
  help: 'the name of the network device'

nomnom.option 'reset',
  abbr: 'r'
  flag: true
  help: 'resets the dns profile'

nomnom.option 'profile',
  position: 0
  help: 'the name of the dns profile'

nomnom.option 'completions',
  flag: true
  help: "shows the completion code to add to .zshrc"
  callback: ->
    dir = path.resolve(path.join(__dirname, '..', 'completions'))
    console.log "fpath=(#{dir} $fpath)"
    console.log "compinit"

options = nomnom.parse()
switcher = new MacDnsSwitcher(network_service: options.device)

showStatus = ->
  console.log clc.blue('DNS Servers:')
  console.log switcher.getDnsServers()
  console.log clc.blue('DNS Search Domains:')
  console.log switcher.getSearchDomains()

if options.reset
  console.log clc.green('Resetting...')
  switcher.activate({})
  showStatus()

else if options.profile
  profile = Profile.findByName(options.profile)
  if profile?
    console.log clc.green("Loading profile '#{options.profile}'...")
    switcher.activate(profile)
  else
    console.log clc.red("Invalid profile '#{options.profile}'")
  showStatus()

else
  unless options.completions or options.list
    showStatus()

